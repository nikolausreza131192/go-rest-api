// Code generated by MockGen. DO NOT EDIT.
// Source: repository/item.go

// Package repository is a generated GoMock package.
package repository

import (
	gomock "github.com/golang/mock/gomock"
	entity "github.com/nikolausreza131192/pos/entity"
	reflect "reflect"
)

// MockItemRepo is a mock of ItemRepo interface
type MockItemRepo struct {
	ctrl     *gomock.Controller
	recorder *MockItemRepoMockRecorder
}

// MockItemRepoMockRecorder is the mock recorder for MockItemRepo
type MockItemRepoMockRecorder struct {
	mock *MockItemRepo
}

// NewMockItemRepo creates a new mock instance
func NewMockItemRepo(ctrl *gomock.Controller) *MockItemRepo {
	mock := &MockItemRepo{ctrl: ctrl}
	mock.recorder = &MockItemRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockItemRepo) EXPECT() *MockItemRepoMockRecorder {
	return m.recorder
}

// GetAll mocks base method
func (m *MockItemRepo) GetAll() []entity.Item {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]entity.Item)
	return ret0
}

// GetAll indicates an expected call of GetAll
func (mr *MockItemRepoMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockItemRepo)(nil).GetAll))
}

// GetByID mocks base method
func (m *MockItemRepo) GetByID(id int) entity.Item {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", id)
	ret0, _ := ret[0].(entity.Item)
	return ret0
}

// GetByID indicates an expected call of GetByID
func (mr *MockItemRepoMockRecorder) GetByID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockItemRepo)(nil).GetByID), id)
}
